// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/udp/udp.proto

package udp

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/quocbang/arrows/pkg/protobuf/authentication"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("api/udp/udp.proto", fileDescriptor_7bd1eef05b1565d8) }

var fileDescriptor_7bd1eef05b1565d8 = []byte{
	// 126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2f, 0x4d, 0x29, 0x00, 0x61, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0x21, 0xb6, 0xc4, 0xa2, 0xa2,
	0xfc, 0xf2, 0x62, 0x29, 0xc9, 0xc4, 0xd2, 0x92, 0x8c, 0xd4, 0xbc, 0x92, 0xcc, 0xe4, 0xc4, 0x92,
	0xcc, 0xfc, 0x3c, 0xfd, 0xd2, 0xe2, 0xd4, 0x22, 0x88, 0x12, 0x23, 0x6e, 0x2e, 0xce, 0x50, 0x97,
	0x00, 0x47, 0xb0, 0x3a, 0x27, 0xc3, 0x28, 0xfd, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4,
	0xfc, 0x5c, 0xfd, 0xc2, 0xd2, 0xfc, 0xe4, 0xa4, 0xc4, 0xbc, 0x74, 0x7d, 0x88, 0x29, 0xfa, 0x05,
	0xd9, 0xe9, 0xfa, 0x60, 0x4d, 0x49, 0xa5, 0x69, 0xfa, 0x50, 0xcb, 0x92, 0xd8, 0xc0, 0x22, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xc7, 0x31, 0x2e, 0x7e, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UDPArrowsClient is the client API for UDPArrows service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UDPArrowsClient interface {
}

type uDPArrowsClient struct {
	cc *grpc.ClientConn
}

func NewUDPArrowsClient(cc *grpc.ClientConn) UDPArrowsClient {
	return &uDPArrowsClient{cc}
}

// UDPArrowsServer is the server API for UDPArrows service.
type UDPArrowsServer interface {
}

func RegisterUDPArrowsServer(s *grpc.Server, srv UDPArrowsServer) {
	s.RegisterService(&_UDPArrows_serviceDesc, srv)
}

var _UDPArrows_serviceDesc = grpc.ServiceDesc{
	ServiceName: "arrows.UDPArrows",
	HandlerType: (*UDPArrowsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "api/udp/udp.proto",
}
